package mocks

import io "io"
import mock "github.com/stretchr/testify/mock"
import packets "github.com/eclipse/paho.mqtt.golang/packets"

// Generated do not edit

// ControlPacket is an autogenerated mock type for the ControlPacket type
type ControlPacket struct {
	mock.Mock
}

// Details provides a mock function with given fields:
func (_m *ControlPacket) Details() packets.Details {
	ret := _m.Called()

	var r0 packets.Details
	if rf, ok := ret.Get(0).(func() packets.Details); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(packets.Details)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *ControlPacket) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Unpack provides a mock function with given fields: _a0
func (_m *ControlPacket) Unpack(_a0 io.Reader) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Write provides a mock function with given fields: _a0
func (_m *ControlPacket) Write(_a0 io.Writer) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

var _ packets.ControlPacket = (*ControlPacket)(nil)
