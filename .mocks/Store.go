package mocks

import mock "github.com/stretchr/testify/mock"
import mqtt "github.com/eclipse/paho.mqtt.golang"
import packets "github.com/eclipse/paho.mqtt.golang/packets"

// Generated do not edit

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// All provides a mock function with given fields:
func (_m *Store) All() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *Store) Close() {
	_m.Called()
}

// Del provides a mock function with given fields: _a0
func (_m *Store) Del(_a0 string) {
	_m.Called(_a0)
}

// Get provides a mock function with given fields: _a0
func (_m *Store) Get(_a0 string) packets.ControlPacket {
	ret := _m.Called(_a0)

	var r0 packets.ControlPacket
	if rf, ok := ret.Get(0).(func(string) packets.ControlPacket); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(packets.ControlPacket)
		}
	}

	return r0
}

// Open provides a mock function with given fields:
func (_m *Store) Open() {
	_m.Called()
}

// Put provides a mock function with given fields: _a0, _a1
func (_m *Store) Put(_a0 string, _a1 packets.ControlPacket) {
	_m.Called(_a0, _a1)
}

// Reset provides a mock function with given fields:
func (_m *Store) Reset() {
	_m.Called()
}

var _ mqtt.Store = (*Store)(nil)
